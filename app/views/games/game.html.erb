<div id="gameboard">

  <!-- 085 Added modal warning if phone is vertical. MOVE 2 '00_READ_THIS_FIRST.txt' -->
  <div id="phone__warning--modal">
    <svg class="svg__phone" version="1.1" viewBox="0 0 219 374" xmlns="http://www.w3.org/2000/svg">
      <g fill="none" fill-rule="evenodd">
        <g class="svg__phone--path" transform="translate(-65 -278)">
        <path d="m80.383 278h188.23c5.3491 0 7.2888 0.55695 9.2444 1.6028 1.9556 1.0458 3.4903 2.5806 4.5361 4.5361 1.0458 1.9556 1.6028 3.8953 1.6028 9.2444v343.23c0 5.3491-0.55695 7.2888-1.6028 9.2444-1.0458 1.9556-2.5806 3.4903-4.5361 4.5361-1.9556 1.0458-3.8953 1.6028-9.2444 1.6028h-188.23c-5.3491 0-7.2888-0.55695-9.2444-1.6028-1.9556-1.0458-3.4903-2.5806-4.5361-4.5361-1.0458-1.9556-1.6028-3.8953-1.6028-9.2444v-343.23c0-5.3491 0.55695-7.2888 1.6028-9.2444 1.0458-1.9556 2.5806-3.4903 4.5361-4.5361 1.9556-1.0458 3.8953-1.6028 9.2444-1.6028zm8.3083 17c-2.6746 0-3.6444 0.27848-4.6222 0.8014s-1.7451 1.2903-2.2681 2.2681-0.8014 1.9476-0.8014 4.6222v287.62c0 2.6746 0.27848 3.6444 0.8014 4.6222s1.2903 1.7451 2.2681 2.2681 1.9476 0.8014 4.6222 0.8014h170.62c2.6746 0 3.6444-0.27848 4.6222-0.8014s1.7451-1.2903 2.2681-2.2681 0.8014-1.9476 0.8014-4.6222v-287.62c0-2.6746-0.27848-3.6444-0.8014-4.6222s-1.2903-1.7451-2.2681-2.2681-1.9476-0.8014-4.6222-0.8014h-170.62zm85.308 347c8.8366 0 16-7.1634 16-16s-7.1634-16-16-16-16 7.1634-16 16 7.1634 16 16 16z"/>
        </g>
      </g>
    </svg>
    <h2 class="text-center">Please rotate<br>your device</h2>
  </div>

  <div class="button__case">
    <div class="button_new_game">
      <span>NEW GAME</span>
    </div>
    <!-- 079 Adding a 15 second countdown timer. CREATE AND MOVE 2 'timer.js' -->
    <div class="text-center">
      <h2 class="title">Quick! Make a word!</h2>
      <span id="timer"></span>
    </div>
    <div class="button_submit">
      <span>SUBMIT</span>
    </div>
  </div>

  <!-- 031 simple_form (no-model) that will take the ':game_data' and do a get request for '/games/score'. The ':user_answer' will submit the user input, and ':grid_letters' will submit a string of the grid letters. MOVE 2 'games_controller.rb'  -->
  <!-- 070 added remote: true so this will now be handled as a ajax request. MOVE 2 'games_controller.rb'-->
  <%= simple_form_for :game_data, url:'/games/score', remote: true, method:'get', as: :hidden, html: { id: 'user_word' } do |f| %>
    <%= f.input :user_answer %>
    <%= f.input :grid_letters, input_html: {value: @grid} %>
    <!-- 045 This will pass the time started to the score page. MOVE 2 'score.html.erb' -->
    <%= f.input :time_start, input_html: {value: @time_start} %>
    <%= f.submit "submit", class: "btn btn-primary" %>
  <% end %>

  <!-- 065 [CANCELLED] A trick online to transfer ruby variables to javacsript by hiding them inside a hidden div. On second thought the time_start being a ruby var and time_end being a js var doesnt sound good. MOVE 2 'clickable.js' -->
  <%#= content_tag :div, id: 'rubyData' , as: :hidden, data: {gridletters: @grid} do %>
  <%# end %>
  <div>
    <div class="text-center">
    </div>
    <!-- 059 Make an area for the chosen letters. MOVE 2 '_game.scss' -->
    <div class="letters__container">
    </div>
  </div>

  <div class="grid__container">
    <!-- 025 I pass the @grid (the array of alphabets) into here and display each one in the view. -->
    <% @grid.each do |alphabet| %>
      <!-- 026 I'm going to start applying some basic styling. MOVE 2 '_game.scss' -->
      <p class="font__alphabets--grid"><%= alphabet %></p>
    <% end %>
  </div>

</div>